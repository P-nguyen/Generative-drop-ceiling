<dynWorkspace X="-110.80732477137" Y="35.6584323011776" zoom="0.1" Description="" Category="" Name="Home">
  <dynElements>
    <Dynamo.Nodes.dynPythonString type="Dynamo.Nodes.dynPythonString" guid="bc3ba522-01fd-405a-8a43-ff1093b288b4" nickname="Python Script From String" x="1231.93171590169" y="836.973333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="9ff4f62d-b920-4b64-9ed5-909275b749f7" nickname="File Path" x="685.265049235026" y="832.973333333334" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Python\Read_txtfile_for_pointlist.py" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynFileReader type="Dynamo.Nodes.dynFileReader" guid="34536e59-723e-43db-bdd1-918900fd5b23" nickname="Read Text File" x="1018.59838256836" y="832.973333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="119a3831-669c-4826-a8fc-8f5ffc2dc979" nickname="File Path" x="681.128481038411" y="913.586666666666" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Exported_TxtFiles\Test_Point_list5.txt" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynFileReader type="Dynamo.Nodes.dynFileReader" guid="1bd61e2b-c470-4e5b-805c-c928f6d96273" nickname="Read Text File" x="1022.59838256836" y="911.64" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.ForceDrawNode type="Dynamo.Nodes.ForceDrawNode" guid="fb424ff6-600a-4a35-9d5d-4a71132f8628" nickname="Draw" x="2914.94123971122" y="40" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="98c31aaf-7d1e-41b8-8e64-a661536c8158" nickname="Watch" x="1422.46181437174" y="838.99619047619" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch3D type="Dynamo.Nodes.dynWatch3D" guid="1229c12d-312c-4969-b166-9c8fce591512" nickname="Watch 3D" x="3097.54752865746" y="40" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynPythonString type="Dynamo.Nodes.dynPythonString" guid="20f805c9-f996-459b-b538-881fdaf9dbcf" nickname="Python Script From String" x="1927.13171590169" y="566.344761904762" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="ea42beb6-5981-4d46-84b5-1afab29103b5" nickname="File Path" x="1372.46504923503" y="565.773333333334" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Python\Planar_quads_Intersect_geometry_Debugging_peter.py" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynFileReader type="Dynamo.Nodes.dynFileReader" guid="ec811cf2-d40d-409e-8339-952ded74cab9" nickname="Read Text File" x="1705.79838256836" y="565.773333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynPython type="Dynamo.Nodes.dynPython" guid="c26052c7-af6f-4e23-bc83-e908e1fdf0ea" nickname="Python Script" x="3044.08029959459" y="480" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Script>import sys
path = 'C:\\Users\\t_nguyp\\Desktop\\Dynamo\\Release'
sys.path.append(path)
import clr
clr.AddReference('LibGNet')
from Autodesk.LibG import *

from Autodesk.LibG import Point,Line,Surface,Polygon,Geometry,Vector

#The input to this node will be stored in the IN variable.
dataEnteringNode = IN
polygon_list = IN[0]

def move_point_byvector( point, vector, magnitude ):
    vector_copy = Vector.by_coordinates(vector.x(),vector.y(),vector.z())
    vector_copy.normalize()
       
    newpoint = [0,0,0]
    newpoint[0] = point.x() + (vector_copy.x() * magnitude)
    newpoint[1] = point.y() + (vector_copy.y() * magnitude)
    newpoint[2] = point.z() + (vector_copy.z() * magnitude)
    
    finalpt = Point.by_coordinates(newpoint[0], newpoint[1], newpoint[2])
    return finalpt

def add_two_vectors( vector_1,vector_2 ):
    vector_1.normalize()
    vector_2.normalize()
    
    vec_x = (vector_1.x() + vector_2.x()) / 2 
    vec_y = (vector_1.y() + vector_2.y()) / 2 
    vec_z = (vector_1.z() + vector_2.z()) / 2 
    
    final_vec = Vector.from_xyz( vec_x, vec_y, vec_z )
    
    return final_vec
            
def create_connection_plate( Point_A, Point_B, vector, setback):
    
    curve = Line.by_start_point_end_point (Point_A, Point_B)
    dist = curve.length ()
    pt1 = curve.point_at_distance (setback)
    pt2 = curve.point_at_distance (dist - setback)
    
    v1 = move_point_byvector( pt1, vector, -plate_protrusion ) #-
    v2 = move_point_byvector( pt2, vector, -plate_protrusion ) #-
    v3 = move_point_byvector( pt2, vector, panel_thickness ) #+ The 1 is for  the hanger? do we need it? 
    v4 = move_point_byvector( pt1, vector, panel_thickness ) #+
    
    Surface = Polygon.by_points( PointList([v1,v2,v3,v4]) )
    return Surface

def check_if_plate_exist( new_plate, exisitng_plates ):
	boolean = False
	centroid_1 = new_plate.point_at_parameter( 0.5,0.5 )
	
	if existing_plates:
		for plate in existing_plates:
			centroid_2 = plate.point_at_parameter( 0.5,0.5 )
			dist = centroid_1.distance_to(centroid_2)
			if dist &lt; .5:
				boolean = True
			
	return boolean
	
def intersect_plane_to_solid( polygons, point_indexs, panel_thickness ):
    i = point_indexs[0]
    j = point_indexs[1]
    
    poly_points = polygons[i][j].vertices()
    center_norm = polygons[i][j].normal_at_parameter (0.5, 0.5)
    
    plates = []
    #points = []
    #poly1
    if j-1 &gt;= 0: 
        adjacent_norm = polygons[i][j-1].normal_at_parameter (0.5, 0.5)
		
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[1], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[0], poly_points[1], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
			plates.append(test_plate)
    
    #poly2    
    if i+1 &lt;= len(polygons)-1:
        adjacent_norm = polygons[i+1][j].normal_at_parameter (0.5, 0.5)
        
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[2], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[1], poly_points[2], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
        	plates.append(test_plate)
    
    #poly3 
    if j+1 &lt;= len(polygons[0])-1:
        adjacent_norm = polygons[i][j+1].normal_at_parameter (0.5, 0.5)
        
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[3], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[2], poly_points[3], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
        	plates.append(test_plate)
        
    #poly4 
    if i-1 &gt;= 0:
        adjacent_norm = polygons[i-1][j].normal_at_parameter (0.5, 0.5)
		
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[0], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[3], poly_points[0], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
        	plates.append(test_plate)
    
    return plates

####Main####
panel_thickness = IN[1] /12 #for DYNAMO SANDBOX  # for REVIT FEET 0.166

#plate specific variables
plate_protrusion = 0.25 # how much the plate pops out // look at DEF create_connection_plate
setback = 1 # shortens the plate to avoid conflict at corners
existing_plates = []


#debug_plates = []
#create new grid of points that are correctly offset from the original pointlist.
for i in range(len(polygon_list)):
    for j in range(len(polygon_list[0])):
       #debug_planes.extend( intersect_plane( polygon_list, [i,j] ) )
       result = intersect_plane_to_solid( polygon_list, [i,j], panel_thickness )
       existing_plates.extend(result)
       #debug_plates.extend( result)


OUT = existing_plates #polygon_list# ,debug_planes</Script>
    </Dynamo.Nodes.dynPython>
    <Dynamo.Nodes.dynDeCons type="Dynamo.Nodes.dynDeCons" guid="f2dd5153-d590-4254-a81b-dc9657ddbb5f" nickname="Split List" x="2165.5878342393" y="428.425649694216" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="c46e2b22-9e4a-47b1-abae-51223f4f2884" nickname="Watch" x="2550.24497709645" y="40" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="5f985a64-d22f-4fb6-847d-d0ba147d37de" nickname="Watch" x="2539.76878662026" y="607.333333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynFirst type="Dynamo.Nodes.dynFirst" guid="e4227d7e-2f20-4d1f-b857-c9e380164660" nickname="First of List" x="2409.36752835144" y="610" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.ForceDrawNode type="Dynamo.Nodes.ForceDrawNode" guid="022b337a-b109-4c74-864c-95064c59273a" nickname="Draw" x="3668.26240728385" y="611" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="b6c3d907-2bd0-49ad-8e68-4ab528cf4093" nickname="Watch" x="3499.44180249327" y="734" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynNewList type="Dynamo.Nodes.dynNewList" guid="3738f1a2-9ffe-4bb7-a042-81c34770b100" nickname="List" x="1867.67295138724" y="778.666937295506" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Input name="index0" />
      <Input name="index1" />
      <Input name="index2" />
    </Dynamo.Nodes.dynNewList>
    <Dynamo.Nodes.dynStringInput type="Dynamo.Nodes.dynStringInput" guid="7e7f1750-20a9-4581-9eb8-741a58f53eea" nickname="String" x="1739.73542575497" y="1077.05914508771" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Exported_TxtFiles\planarQuad_textfile5.txt" />
    </Dynamo.Nodes.dynStringInput>
    <Dynamo.Nodes.dynDoubleInput type="Dynamo.Nodes.dynDoubleInput" guid="45e399e8-cc45-4b9e-bac9-5685ceb221f0" nickname="Number" x="1738.25571209983" y="1009.59767322624" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="5.000" />
    </Dynamo.Nodes.dynDoubleInput>
    <Dynamo.Nodes.dynNewList type="Dynamo.Nodes.dynNewList" guid="77b7367d-4a6a-4de1-b063-b7d23271094d" nickname="List" x="2893.77713609142" y="947.643272071841" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Input name="index0" />
      <Input name="index1" />
    </Dynamo.Nodes.dynNewList>
    <Dynamo.Nodes.dynPythonString type="Dynamo.Nodes.dynPythonString" guid="309b2600-2911-44db-b76a-650a29ebce82" nickname="Python Script From String" x="3293.3265926102" y="598.715476595903" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="500602d4-31cb-41ee-aced-219f88cc2bfa" nickname="File Path" x="2877.3265926102" y="599.515476595903" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Python\Connection_Plates.py" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynFileReader type="Dynamo.Nodes.dynFileReader" guid="9387e438-a1be-4152-806d-21d7a434ce56" nickname="Read Text File" x="3119.3265926102" y="598.715476595903" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.ExportSATNode type="Dynamo.Nodes.ExportSATNode" guid="29372597-8753-4e16-842c-2e3e227dc0fc" nickname="Export To SAT" x="4899.98181913298" y="272.071508341934" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynStringInput type="Dynamo.Nodes.dynStringInput" guid="0e21e0e7-9b27-494e-994c-3efee096b6dc" nickname="String" x="4634.2549555262" y="163.378175008601" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Final_mockup\connection_plates.sat" />
    </Dynamo.Nodes.dynStringInput>
    <Dynamo.Nodes.ExportSATNode type="Dynamo.Nodes.ExportSATNode" guid="ee3fc5e0-fbf3-4aeb-ad9d-e40f8d8bfff5" nickname="Export To SAT" x="3879.98181913298" y="62.7381750086013" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynStringInput type="Dynamo.Nodes.dynStringInput" guid="5753dce5-7849-419b-af10-776ba8222cdf" nickname="String" x="3550.2549555262" y="154.044841675268" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Final_mockup\planar_solids.sat" />
    </Dynamo.Nodes.dynStringInput>
    <Dynamo.Nodes.dynPython type="Dynamo.Nodes.dynPython" guid="b0bc67a8-9e9a-44a7-a70f-b4f88b0e4ff4" nickname="Python Script" x="4772.44945205495" y="610.814144809439" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Script>import sys
path = 'C:\\Users\\t_nguyp\\Desktop\\Dynamo\\Release'
sys.path.append(path)
import clr
clr.AddReference('LibGNet')
from Autodesk.LibG import *

from Autodesk.LibG import Point,Line,Surface,Polygon,Geometry,Vector

#The input to this node will be stored in the IN variable.
dataEnteringNode = IN

reference_surfaces = IN[0]
tab_height = IN[1] / 12

def vector_create( point_to , point_from ):
   
    vec_x = (point_to.x() - point_from.x()) / 2 
    vec_y = (point_to.y() - point_from.y()) / 2 
    vec_z = (point_to.z() - point_from.z()) / 2 
    
    final_vec = Vector.from_xyz( vec_x, vec_y, vec_z )
    
    return final_vec
    
def move_point_byvector( point, vector, magnitude ):
    vector_copy = Vector.by_coordinates(vector.x(),vector.y(),vector.z())
    vector_copy.normalize()
       
    newpoint = [0,0,0]
    newpoint[0] = point.x() + (vector_copy.x() * magnitude)
    newpoint[1] = point.y() + (vector_copy.y() * magnitude)
    newpoint[2] = point.z() + (vector_copy.z() * magnitude)
    
    finalpt = Point.by_coordinates(newpoint[0], newpoint[1], newpoint[2])
    return finalpt

def find_mid_point( point_1, Point_2):
	
	x = ( point_1.x() + Point_2.x() ) / 2
	y = ( point_1.y() + Point_2.y() ) / 2
	z = ( point_1.z() + Point_2.z() ) / 2
	midpoint = Point.by_coordinates(x,y,z)
	return midpoint

###MAIN###
debug_srf = []
for surface in reference_surfaces:
	test = surface.vertices()
	vec = vector_create( test[2] , test[1] )
	midpoint = find_mid_point( test[2] , test[3] )
	tab_point = move_point_byvector( midpoint, vec, tab_height )
	
	debug_srf.append( Polygon.by_points(PointList([test[0],test[1],test[2], tab_point, test[3]])) )
	
	
	
#Assign your output to the OUT variable
OUT = debug_srf #test[1],test[2],surface</Script>
    </Dynamo.Nodes.dynPython>
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="a8a3bcd3-0559-4965-a436-65f0d5eb584a" nickname="Watch" x="4715.31791090709" y="786.881677654227" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.ForceDrawNode type="Dynamo.Nodes.ForceDrawNode" guid="303a071a-85b6-4d6f-a5de-70b30f27f2cf" nickname="Draw" x="5019.88933947851" y="609.548344320893" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynWatch3D type="Dynamo.Nodes.dynWatch3D" guid="f91aa899-0e44-4327-9568-f12e3a057a74" nickname="Watch 3D" x="5195.14850163052" y="601.697550670099" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynNewList type="Dynamo.Nodes.dynNewList" guid="20af5dcb-65ee-482e-bb59-a08b5be378ef" nickname="List" x="4595.91952833873" y="608.054376066925" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Input name="index0" />
      <Input name="index1" />
    </Dynamo.Nodes.dynNewList>
    <Dynamo.Nodes.dynDoubleInput type="Dynamo.Nodes.dynDoubleInput" guid="235a2943-82b6-4805-ab95-049362d137cf" nickname="Number" x="4418.09095691015" y="740.854376066925" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="10.000" />
    </Dynamo.Nodes.dynDoubleInput>
    <Dynamo.Nodes.dynWatch3D type="Dynamo.Nodes.dynWatch3D" guid="8c292973-e6c1-413a-bc1c-ca41dc2873cf" nickname="Watch 3D" x="3912.04778103696" y="604.230972803521" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
  </dynElements>
  <dynConnectors>
    <Dynamo.Connectors.dynConnectorModel start="bc3ba522-01fd-405a-8a43-ff1093b288b4" start_index="0" end="98c31aaf-7d1e-41b8-8e64-a661536c8158" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="9ff4f62d-b920-4b64-9ed5-909275b749f7" start_index="0" end="34536e59-723e-43db-bdd1-918900fd5b23" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="34536e59-723e-43db-bdd1-918900fd5b23" start_index="0" end="bc3ba522-01fd-405a-8a43-ff1093b288b4" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="119a3831-669c-4826-a8fc-8f5ffc2dc979" start_index="0" end="1bd61e2b-c470-4e5b-805c-c928f6d96273" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="1bd61e2b-c470-4e5b-805c-c928f6d96273" start_index="0" end="bc3ba522-01fd-405a-8a43-ff1093b288b4" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="fb424ff6-600a-4a35-9d5d-4a71132f8628" start_index="0" end="1229c12d-312c-4969-b166-9c8fce591512" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="98c31aaf-7d1e-41b8-8e64-a661536c8158" start_index="0" end="3738f1a2-9ffe-4bb7-a042-81c34770b100" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="1229c12d-312c-4969-b166-9c8fce591512" start_index="0" end="ee3fc5e0-fbf3-4aeb-ad9d-e40f8d8bfff5" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="20f805c9-f996-459b-b538-881fdaf9dbcf" start_index="0" end="f2dd5153-d590-4254-a81b-dc9657ddbb5f" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="ea42beb6-5981-4d46-84b5-1afab29103b5" start_index="0" end="ec811cf2-d40d-409e-8339-952ded74cab9" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="ec811cf2-d40d-409e-8339-952ded74cab9" start_index="0" end="20f805c9-f996-459b-b538-881fdaf9dbcf" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="f2dd5153-d590-4254-a81b-dc9657ddbb5f" start_index="0" end="c46e2b22-9e4a-47b1-abae-51223f4f2884" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="f2dd5153-d590-4254-a81b-dc9657ddbb5f" start_index="1" end="e4227d7e-2f20-4d1f-b857-c9e380164660" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="c46e2b22-9e4a-47b1-abae-51223f4f2884" start_index="0" end="fb424ff6-600a-4a35-9d5d-4a71132f8628" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="5f985a64-d22f-4fb6-847d-d0ba147d37de" start_index="0" end="77b7367d-4a6a-4de1-b063-b7d23271094d" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="e4227d7e-2f20-4d1f-b857-c9e380164660" start_index="0" end="5f985a64-d22f-4fb6-847d-d0ba147d37de" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="022b337a-b109-4c74-864c-95064c59273a" start_index="0" end="8c292973-e6c1-413a-bc1c-ca41dc2873cf" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="3738f1a2-9ffe-4bb7-a042-81c34770b100" start_index="0" end="20f805c9-f996-459b-b538-881fdaf9dbcf" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="7e7f1750-20a9-4581-9eb8-741a58f53eea" start_index="0" end="3738f1a2-9ffe-4bb7-a042-81c34770b100" end_index="2" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="45e399e8-cc45-4b9e-bac9-5685ceb221f0" start_index="0" end="3738f1a2-9ffe-4bb7-a042-81c34770b100" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="45e399e8-cc45-4b9e-bac9-5685ceb221f0" start_index="0" end="77b7367d-4a6a-4de1-b063-b7d23271094d" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="77b7367d-4a6a-4de1-b063-b7d23271094d" start_index="0" end="309b2600-2911-44db-b76a-650a29ebce82" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="309b2600-2911-44db-b76a-650a29ebce82" start_index="0" end="022b337a-b109-4c74-864c-95064c59273a" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="309b2600-2911-44db-b76a-650a29ebce82" start_index="0" end="b6c3d907-2bd0-49ad-8e68-4ab528cf4093" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="500602d4-31cb-41ee-aced-219f88cc2bfa" start_index="0" end="9387e438-a1be-4152-806d-21d7a434ce56" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="9387e438-a1be-4152-806d-21d7a434ce56" start_index="0" end="309b2600-2911-44db-b76a-650a29ebce82" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="0e21e0e7-9b27-494e-994c-3efee096b6dc" start_index="0" end="29372597-8753-4e16-842c-2e3e227dc0fc" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="5753dce5-7849-419b-af10-776ba8222cdf" start_index="0" end="ee3fc5e0-fbf3-4aeb-ad9d-e40f8d8bfff5" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="b0bc67a8-9e9a-44a7-a70f-b4f88b0e4ff4" start_index="0" end="a8a3bcd3-0559-4965-a436-65f0d5eb584a" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="b0bc67a8-9e9a-44a7-a70f-b4f88b0e4ff4" start_index="0" end="303a071a-85b6-4d6f-a5de-70b30f27f2cf" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="303a071a-85b6-4d6f-a5de-70b30f27f2cf" start_index="0" end="f91aa899-0e44-4327-9568-f12e3a057a74" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="20af5dcb-65ee-482e-bb59-a08b5be378ef" start_index="0" end="b0bc67a8-9e9a-44a7-a70f-b4f88b0e4ff4" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="235a2943-82b6-4805-ab95-049362d137cf" start_index="0" end="20af5dcb-65ee-482e-bb59-a08b5be378ef" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="8c292973-e6c1-413a-bc1c-ca41dc2873cf" start_index="0" end="20af5dcb-65ee-482e-bb59-a08b5be378ef" end_index="0" portType="0" />
  </dynConnectors>
  <dynNotes />
</dynWorkspace>