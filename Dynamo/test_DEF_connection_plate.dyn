<dynWorkspace X="-278.391410107214" Y="-464.788207242492" zoom="0.5" Description="" Category="" Name="Home">
  <dynElements>
    <Dynamo.Nodes.ImportSATNode type="Dynamo.Nodes.ImportSATNode" guid="d3c86019-1d2d-4c36-a276-29e8de9220a3" nickname="Import SAT" x="1520.86181437174" y="1350.65333333333" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="abba35c5-9db4-4865-bbb8-a1c4968b758b" nickname="File Path" x="1122.46181437174" y="1368.25333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Media\testgeo_poly.sat" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="de0d39b7-21e1-43e9-a033-86cb2332db05" nickname="Watch" x="1973.12848103841" y="1340.52" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch3D type="Dynamo.Nodes.dynWatch3D" guid="66a760ba-657d-4eaa-903a-ef8b8929f130" nickname="Watch 3D" x="2220.72848103841" y="1177.32" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynPython type="Dynamo.Nodes.dynPython" guid="0fae6cc0-4436-4fa7-85eb-61293ae8ddc4" nickname="Python Script" x="1597.36028733026" y="1754.97333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Script>import sys
path = 'C:\\Users\\t_nguyp\\Desktop\\Dynamo\\Release'
sys.path.append(path)
import clr
clr.AddReference('LibGNet')
from Autodesk.LibG import *

from Autodesk.LibG import Point,Line,Surface,Polygon,Geometry
#The input to this node will be stored in the IN variable.
dataEnteringNode = IN

points = IN
line = Line.by_start_point_end_point (points[0],points[1])
vec = Vector.by_coordinates(0.0, 0.0, 1.0)

def move_point_byvector( point, vector, magnitude ):
    vector_copy = Vector.by_coordinates(vector.x(),vector.y(),vector.z())
    vector_copy.normalize()
       
    newpoint = [0,0,0]
    newpoint[0] = point.x() + (vector_copy.x() * magnitude)
    newpoint[1] = point.y() + (vector_copy.y() * magnitude)
    newpoint[2] = point.z() + (vector_copy.z() * magnitude)
    
    finalpt = Point.by_coordinates(newpoint[0], newpoint[1], newpoint[2])
    return finalpt
    
def create_connection_plate( Point_A, Point_B, vector):
	
	curve = Line.by_start_point_end_point (Point_A, Point_B)
	dist = curve.length ()
	pt1 = curve.point_at_distance (1.0)
	pt2 = curve.point_at_distance (dist - 1)
	
	v1 = move_point_byvector( pt1, vector, offset ) #-
	v2 = move_point_byvector( pt2, vector, offset ) #-
	v3 = move_point_byvector( pt2, vector, height ) #+
	v4 = move_point_byvector( pt1, vector, height ) #+
	
	Surface = Polygon.by_points( PointList([v1,v2,v3,v4]) )
	return Surface


offset = -1
height = 5
test = create_connection_plate(points[0],points[1], vec)

#Assign your output to the OUT variable
OUT = test,line</Script>
    </Dynamo.Nodes.dynPython>
    <Dynamo.Nodes.dynPythonString type="Dynamo.Nodes.dynPythonString" guid="51e55345-cffc-483a-886e-d31fc87b9788" nickname="Python Script From String" x="1431.93171590169" y="836.973333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="fd8d32bb-25f4-43ae-aa1f-8832e264d806" nickname="File Path" x="885.265049235026" y="832.973333333334" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Python\Read_txtfile_for_pointlist.py" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynFileReader type="Dynamo.Nodes.dynFileReader" guid="02752d19-72bb-48ac-b1e6-ea75b6817c17" nickname="Read Text File" x="1218.59838256836" y="832.973333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="2a9340ea-72dc-4552-b8ee-d95a69b5c000" nickname="File Path" x="881.128481038411" y="913.586666666666" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Exported_TxtFiles\planarQuad_textfile.txt" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynFileReader type="Dynamo.Nodes.dynFileReader" guid="8d9dad3a-ff82-4589-9f52-3418c0f11c09" nickname="Read Text File" x="1222.59838256836" y="911.64" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.ForceDrawNode type="Dynamo.Nodes.ForceDrawNode" guid="90595410-6545-4d1f-92c2-557537ecc190" nickname="Draw" x="3210.36981113979" y="723.639999999999" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="cebdd93b-64bb-4d9e-9f1a-97e4dabe3642" nickname="Watch" x="1702.46181437174" y="885.853333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch3D type="Dynamo.Nodes.dynWatch3D" guid="377c3297-1b4a-4cec-8048-8f6584e31444" nickname="Watch 3D" x="3392.97610008603" y="718.386666666666" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynNewList type="Dynamo.Nodes.dynNewList" guid="71d8e2c1-4f93-496d-92a6-f12590193a73" nickname="List" x="1419.99722726004" y="1758.16380952381" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Input name="index0" />
      <Input name="index1" />
    </Dynamo.Nodes.dynNewList>
    <Dynamo.Nodes.Point3DNode type="Dynamo.Nodes.Point3DNode" guid="0e21146a-d5f8-40cf-b9d9-a7b9f5bef9d4" nickname="Point" x="1254.46071932354" y="1619.96698412698" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynDoubleInput type="Dynamo.Nodes.dynDoubleInput" guid="fc8500d9-a64a-4b94-bf64-a69f3d5dada7" nickname="Number" x="1105.88929075211" y="1600.91936507936" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="0.0" />
    </Dynamo.Nodes.dynDoubleInput>
    <Dynamo.Nodes.Point3DNode type="Dynamo.Nodes.Point3DNode" guid="cda11b47-c468-49b1-bbba-24445941b184" nickname="Point" x="1254.90516376798" y="1774.63365079365" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynDoubleInput type="Dynamo.Nodes.dynDoubleInput" guid="5dbbfac9-bfb8-4ae2-a154-88a1044da507" nickname="Number" x="1110.778179641" y="1755.58603174603" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.Double value="5.000" />
    </Dynamo.Nodes.dynDoubleInput>
    <Dynamo.Nodes.ForceDrawNode type="Dynamo.Nodes.ForceDrawNode" guid="bc078b0d-31a6-4dbd-a7f7-e643709d9b0d" nickname="Draw" x="1742.82425827753" y="1773.19555555556" isVisible="true" isUpstreamVisible="false" lacing="Longest" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="a7b2de72-f839-440e-b930-fdcd9e027ec5" nickname="Watch" x="1560.34806780134" y="1912.00507936508" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch3D type="Dynamo.Nodes.dynWatch3D" guid="f7732c4f-c639-40c2-ae1e-30474d87ec5a" nickname="Watch 3D" x="2057.10997256324" y="1822.0526984127" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynPythonString type="Dynamo.Nodes.dynPythonString" guid="34082809-aecf-48ca-8c17-b6e88e11b508" nickname="Python Script From String" x="2119.13171590169" y="569.773333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynStringFilename type="Dynamo.Nodes.dynStringFilename" guid="a2dd9994-d893-4aaa-bb6c-f5662122ae97" nickname="File Path" x="1572.46504923503" y="565.773333333334" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <System.String value="C:\dev\Generative-drop-ceiling\Python\Planar_quads_Intersect_geometry_Debugging_peter.py" />
    </Dynamo.Nodes.dynStringFilename>
    <Dynamo.Nodes.dynFileReader type="Dynamo.Nodes.dynFileReader" guid="3a241760-cb6f-41b0-a1ef-308d86c8a5d3" nickname="Read Text File" x="1905.79838256836" y="565.773333333333" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynFlattenList type="Dynamo.Nodes.dynFlattenList" guid="88c7fa3e-c148-496f-ab5c-d4046289422f" nickname="Flatten Completely" x="3959.02803590704" y="455.943541537826" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynPython type="Dynamo.Nodes.dynPython" guid="ad554e62-45e5-4d36-b46b-24b414c9aced" nickname="Python Script" x="4133.69584112158" y="457.097192331477" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Script>#The input to this node will be stored in the IN variable.
dataEnteringNode = IN

plate_surfaces = IN
working_list = []
for object in plate_surfaces:
	working_list.append( [object, False] ) 


test = []
count = 0

for i in range(len(working_list)):
	pt1 = plate_surfaces[i].point_at_parameter ( 0.5, 0.5 )
	for j in range(len(working_list)):
		pt2 = working_list[j].point_at_parameter ( 0.5, 0.5 )
		dist = pt1.distance_to(pt2)
		if dist == 0:
			working_list[j][1] = True
			
#final_plates = cull_duplicates(plate_surfaces)

#Assign your output to the OUT variable
OUT = working_list</Script>
    </Dynamo.Nodes.dynPython>
    <Dynamo.Nodes.dynPython type="Dynamo.Nodes.dynPython" guid="c7fa25eb-e776-4a69-89f5-36b414c9ec3e" nickname="connection panels" x="3343.74696626125" y="62.9227925513592" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Script>import sys
path = 'C:\\Users\\t_nguyp\\Desktop\\Dynamo\\Release'
sys.path.append(path)
import clr
clr.AddReference('LibGNet')
from Autodesk.LibG import *

from Autodesk.LibG import Point,Line,Surface,Polygon,Geometry,Vector

#The input to this node will be stored in the IN variable.
dataEnteringNode = IN
polygon_list = IN

def move_point_byvector( point, vector, magnitude ):
    vector_copy = Vector.by_coordinates(vector.x(),vector.y(),vector.z())
    vector_copy.normalize()
       
    newpoint = [0,0,0]
    newpoint[0] = point.x() + (vector_copy.x() * magnitude)
    newpoint[1] = point.y() + (vector_copy.y() * magnitude)
    newpoint[2] = point.z() + (vector_copy.z() * magnitude)
    
    finalpt = Point.by_coordinates(newpoint[0], newpoint[1], newpoint[2])
    return finalpt

def add_two_vectors( vector_1,vector_2 ):
    vector_1.normalize()
    vector_2.normalize()
    
    vec_x = (vector_1.x() + vector_2.x()) / 2 
    vec_y = (vector_1.y() + vector_2.y()) / 2 
    vec_z = (vector_1.z() + vector_2.z()) / 2 
    
    final_vec = Vector.from_xyz( vec_x, vec_y, vec_z )
    
    return final_vec
            
def create_connection_plate( Point_A, Point_B, vector, setback):
    
    curve = Line.by_start_point_end_point (Point_A, Point_B)
    dist = curve.length ()
    pt1 = curve.point_at_distance (setback)
    pt2 = curve.point_at_distance (dist - setback)
    
    v1 = move_point_byvector( pt1, vector, -plate_protrusion ) #-
    v2 = move_point_byvector( pt2, vector, -plate_protrusion ) #-
    v3 = move_point_byvector( pt2, vector, panel_thickness ) #+ The 1 is for  the hanger? do we need it? 
    v4 = move_point_byvector( pt1, vector, panel_thickness ) #+
    
    Surface = Polygon.by_points( PointList([v1,v2,v3,v4]) )
    return Surface

def check_if_plate_exist( new_plate, exisitng_plates ):
	boolean = False
	centroid_1 = new_plate.point_at_parameter( 0.5,0.5 )
	
	if existing_plates:
		for plate in existing_plates:
			centroid_2 = plate.point_at_parameter( 0.5,0.5 )
			dist = centroid_1.distance_to(centroid_2)
			if dist &lt; .5:
				boolean = True
			
	return boolean
	
def intersect_plane_to_solid( polygons, point_indexs, panel_thickness ):
    i = point_indexs[0]
    j = point_indexs[1]
    
    poly_points = polygons[i][j].vertices()
    center_norm = polygons[i][j].normal_at_parameter (0.5, 0.5)
    
    plates = []
    #points = []
    #poly1
    if j-1 &gt;= 0: 
        adjacent_norm = polygons[i][j-1].normal_at_parameter (0.5, 0.5)
		
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[1], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[0], poly_points[1], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
			plates.append(test_plate)
    
    #poly2    
    if i+1 &lt;= len(polygons)-1:
        adjacent_norm = polygons[i+1][j].normal_at_parameter (0.5, 0.5)
        
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[2], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[1], poly_points[2], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
        	plates.append(test_plate)
    
    #poly3 
    if j+1 &lt;= len(polygons[0])-1:
        adjacent_norm = polygons[i][j+1].normal_at_parameter (0.5, 0.5)
        
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[3], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[2], poly_points[3], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
        	plates.append(test_plate)
        
    #poly4 
    if i-1 &gt;= 0:
        adjacent_norm = polygons[i-1][j].normal_at_parameter (0.5, 0.5)
		
        edge_normal = add_two_vectors( center_norm, adjacent_norm )
        vertical_point = move_point_byvector(poly_points[0], edge_normal, 10 )
        test_plate = create_connection_plate( poly_points[3], poly_points[0], edge_normal, setback)
        check = check_if_plate_exist( test_plate, existing_plates )
        if check == False:
        	plates.append(test_plate)
    
    return plates

####Main####
panel_thickness = 2 #for DYNAMO SANDBOX  # for REVIT FEET 0.166

#plate specific variables
plate_protrusion = 0.25 # how much the plate pops out // look at DEF create_connection_plate
setback = 1 # shortens the plate to avoid conflict at corners
existing_plates = []


#debug_plates = []
#create new grid of points that are correctly offset from the original pointlist.
for i in range(len(polygon_list)):
    for j in range(len(polygon_list[0])):
       #debug_planes.extend( intersect_plane( polygon_list, [i,j] ) )
       result = intersect_plane_to_solid( polygon_list, [i,j], panel_thickness )
       existing_plates.extend(result)
       #debug_plates.extend( result)


OUT = existing_plates #polygon_list# ,debug_planes</Script>
    </Dynamo.Nodes.dynPython>
    <Dynamo.Nodes.dynDeCons type="Dynamo.Nodes.dynDeCons" guid="3df56173-d0a7-4aa1-a68b-c2b7976e7f95" nickname="Split List" x="2395.5878342393" y="344.425649694216" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="6b8f9850-1282-4b56-b496-d73c26b9daf0" nickname="Watch" x="2585.10211995359" y="72.2923163608826" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="4d089803-00ea-479e-a1a8-b934741cd32c" nickname="Watch" x="3005.10211995359" y="69.8637449323112" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynFirst type="Dynamo.Nodes.dynFirst" guid="131fe31f-3f42-4ce1-b9eb-a7854e4eb1b4" nickname="First of List" x="2863.36752835144" y="69.7394592180258" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.ForceDrawNode type="Dynamo.Nodes.ForceDrawNode" guid="9d5c130e-0757-4fc6-91a9-b67b8f9ec1b9" nickname="Draw" x="3485.26240728385" y="59.7418401704072" isVisible="true" isUpstreamVisible="true" lacing="Longest" />
    <Dynamo.Nodes.dynWatch3D type="Dynamo.Nodes.dynWatch3D" guid="c15ad7d6-6faa-4c12-884e-6d0d55cd7930" nickname="Watch 3D" x="3663.6427667527" y="58.3866666666661" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
    <Dynamo.Nodes.dynWatch type="Dynamo.Nodes.dynWatch" guid="4b3c73d8-1855-42f6-b89c-9c27daa754fd" nickname="Watch" x="3352.44180249327" y="242.012951281518" isVisible="true" isUpstreamVisible="true" lacing="Disabled" />
  </dynElements>
  <dynConnectors>
    <Dynamo.Connectors.dynConnectorModel start="d3c86019-1d2d-4c36-a276-29e8de9220a3" start_index="0" end="66a760ba-657d-4eaa-903a-ef8b8929f130" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="d3c86019-1d2d-4c36-a276-29e8de9220a3" start_index="0" end="de0d39b7-21e1-43e9-a033-86cb2332db05" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="abba35c5-9db4-4865-bbb8-a1c4968b758b" start_index="0" end="d3c86019-1d2d-4c36-a276-29e8de9220a3" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="0fae6cc0-4436-4fa7-85eb-61293ae8ddc4" start_index="0" end="bc078b0d-31a6-4dbd-a7f7-e643709d9b0d" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="0fae6cc0-4436-4fa7-85eb-61293ae8ddc4" start_index="0" end="a7b2de72-f839-440e-b930-fdcd9e027ec5" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="51e55345-cffc-483a-886e-d31fc87b9788" start_index="0" end="cebdd93b-64bb-4d9e-9f1a-97e4dabe3642" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="fd8d32bb-25f4-43ae-aa1f-8832e264d806" start_index="0" end="02752d19-72bb-48ac-b1e6-ea75b6817c17" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="02752d19-72bb-48ac-b1e6-ea75b6817c17" start_index="0" end="51e55345-cffc-483a-886e-d31fc87b9788" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="2a9340ea-72dc-4552-b8ee-d95a69b5c000" start_index="0" end="8d9dad3a-ff82-4589-9f52-3418c0f11c09" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="8d9dad3a-ff82-4589-9f52-3418c0f11c09" start_index="0" end="51e55345-cffc-483a-886e-d31fc87b9788" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="90595410-6545-4d1f-92c2-557537ecc190" start_index="0" end="377c3297-1b4a-4cec-8048-8f6584e31444" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="cebdd93b-64bb-4d9e-9f1a-97e4dabe3642" start_index="0" end="34082809-aecf-48ca-8c17-b6e88e11b508" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="71d8e2c1-4f93-496d-92a6-f12590193a73" start_index="0" end="0fae6cc0-4436-4fa7-85eb-61293ae8ddc4" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="0e21146a-d5f8-40cf-b9d9-a7b9f5bef9d4" start_index="0" end="71d8e2c1-4f93-496d-92a6-f12590193a73" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="fc8500d9-a64a-4b94-bf64-a69f3d5dada7" start_index="0" end="0e21146a-d5f8-40cf-b9d9-a7b9f5bef9d4" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="fc8500d9-a64a-4b94-bf64-a69f3d5dada7" start_index="0" end="0e21146a-d5f8-40cf-b9d9-a7b9f5bef9d4" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="fc8500d9-a64a-4b94-bf64-a69f3d5dada7" start_index="0" end="0e21146a-d5f8-40cf-b9d9-a7b9f5bef9d4" end_index="2" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="fc8500d9-a64a-4b94-bf64-a69f3d5dada7" start_index="0" end="cda11b47-c468-49b1-bbba-24445941b184" end_index="2" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="cda11b47-c468-49b1-bbba-24445941b184" start_index="0" end="71d8e2c1-4f93-496d-92a6-f12590193a73" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="5dbbfac9-bfb8-4ae2-a154-88a1044da507" start_index="0" end="cda11b47-c468-49b1-bbba-24445941b184" end_index="1" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="5dbbfac9-bfb8-4ae2-a154-88a1044da507" start_index="0" end="cda11b47-c468-49b1-bbba-24445941b184" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="bc078b0d-31a6-4dbd-a7f7-e643709d9b0d" start_index="0" end="f7732c4f-c639-40c2-ae1e-30474d87ec5a" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="34082809-aecf-48ca-8c17-b6e88e11b508" start_index="0" end="3df56173-d0a7-4aa1-a68b-c2b7976e7f95" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="a2dd9994-d893-4aaa-bb6c-f5662122ae97" start_index="0" end="3a241760-cb6f-41b0-a1ef-308d86c8a5d3" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="3a241760-cb6f-41b0-a1ef-308d86c8a5d3" start_index="0" end="34082809-aecf-48ca-8c17-b6e88e11b508" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="88c7fa3e-c148-496f-ab5c-d4046289422f" start_index="0" end="ad554e62-45e5-4d36-b46b-24b414c9aced" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="c7fa25eb-e776-4a69-89f5-36b414c9ec3e" start_index="0" end="9d5c130e-0757-4fc6-91a9-b67b8f9ec1b9" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="c7fa25eb-e776-4a69-89f5-36b414c9ec3e" start_index="0" end="4b3c73d8-1855-42f6-b89c-9c27daa754fd" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="3df56173-d0a7-4aa1-a68b-c2b7976e7f95" start_index="0" end="6b8f9850-1282-4b56-b496-d73c26b9daf0" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="3df56173-d0a7-4aa1-a68b-c2b7976e7f95" start_index="1" end="131fe31f-3f42-4ce1-b9eb-a7854e4eb1b4" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="6b8f9850-1282-4b56-b496-d73c26b9daf0" start_index="0" end="90595410-6545-4d1f-92c2-557537ecc190" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="4d089803-00ea-479e-a1a8-b934741cd32c" start_index="0" end="c7fa25eb-e776-4a69-89f5-36b414c9ec3e" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="131fe31f-3f42-4ce1-b9eb-a7854e4eb1b4" start_index="0" end="4d089803-00ea-479e-a1a8-b934741cd32c" end_index="0" portType="0" />
    <Dynamo.Connectors.dynConnectorModel start="9d5c130e-0757-4fc6-91a9-b67b8f9ec1b9" start_index="0" end="c15ad7d6-6faa-4c12-884e-6d0d55cd7930" end_index="0" portType="0" />
  </dynConnectors>
  <dynNotes />
</dynWorkspace>